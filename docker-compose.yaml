services:
  ogn-configuration:
    image: ogn-configuration
    container_name: ogn-configuration
    restart: no
    env_file:
      - .env
    environment:
      Demodulator_PipeName: ogn-rf:50010
      APRS_Server: "aprs-filter:14580"
    volumes:
      - shared_data:/shared_data
    healthcheck:
      test: ["CMD", "test", "-s", "/shared_data/rtlsdr-ogn.conf"]
      start_period: 1s
      timeout: 1s
      interval: 1s
      retries: 1

  ogn-rf:
    image: ogn-rf
    container_name: ogn-rf
    restart: unless-stopped
    depends_on:
      ogn-configuration:
        condition: service_healthy
    ports:
      - 8080:8080
    expose:
      - 50010
    volumes:
      - shared_data:/shared_data
    command: /shared_data/rtlsdr-ogn.conf
    devices:
      - /dev/bus/usb:/dev/bus/usb
    networks:
      - receiver
    tty: true
    stdin_open: true

  ogn-decode:
    image: ogn-decode
    container_name: ogn-decode
    restart: unless-stopped
    depends_on:
      ogn-configuration:
        condition: service_healthy
    ports:
      - 8081:8081
    volumes:
      - shared_data:/shared_data
    command: /shared_data/rtlsdr-ogn.conf
    networks:
      - receiver
    tty: true
    stdin_open: true

  aprs-filter:
    image: aprs-filter
    container_name: aprs-filter
    restart: unless-stopped
    depends_on:
      ogn-configuration:
        condition: service_healthy
    expose:
      - 14580
    networks:
      - receiver

networks:
  receiver:
    driver: bridge

volumes:
  shared_data:
